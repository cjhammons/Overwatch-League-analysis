}
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
competitor_ids = matches_df[1,"competitors"][[1]]$id
winnerId = row[1,"winner.id"]
}
}
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
competitor_ids = matches_df[1,"competitors"][[1]]$id
winnerId = matches_df[row,"winner.id"]
}
}
287L
source('C:/programming/owl-analysis/elo.R')
init_elo_table()
source('C:/programming/owl-analysis/elo.R')
init_elo_table()
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
source('C:/programming/owl-analysis/elo.R')
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
competitor_ids <- matches_df[1,"competitors"][[1]]$id
winnerId <- matches_df[row,"winner.id"]
loserId <- -1
if (identical(competitor_ids[1], winnerId)) {
loserId <- competitor_ids[2]
} else {
loserId <- competitor_ids[1]
}
if(is.na(elo_table)){
elo_table <- init_elo_table()
}
winnerElo <- elo_table[elo_table$id==winnerId]
loserElo <- elo_table[elo_table$id==loserId]
browser()
}
}
elo_table[elo_table$id<99999]
View(elo_table)
elo_table$id
elo_table[4523,"elo"]
source('C:/programming/owl-analysis/elo.R')
elo_table = init_elo_table()
elo_table[4523,"elo"]
elo_table[elo_table$elo==4523]
elo_table[elo_table$elo<99999]
View(elo_table)
subset(elo_table, elo==4523)
subset(elo_table, id==4523)
elo_table[elo_table$id==4523]
subset(elo_table, id==4523)
source('C:/programming/owl-analysis/elo.R')
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
elo_test <- elo_calculation(1000,1000)
elo_test <- elo_calculation(1000,1000, 60)
elo_test <- elo_calculation(1000,1000, 45)
elo_test <- elo_calculation(1000,1000, 50)
matches_df[1,"score"][value]
matches_df[1,"score"][1]
matches_df[1,"score"][[1]
]
matches_df[1,"score"][[1]]
matches_df[1,"score"]
matches_df[1,"scores"]
matches_df[1,"scores"][value]
matches_df[1,"scores"][[value]]
matches_df[1,"scores"][1]
matches_df[1,"scores"][[1]]
matches_df[2,"scores"][[1]]
matches_df[2,"scores"][[1]][1]
matches_df[2,"scores"][[1]][value]
matches_df[2,"scores"][[1]][1]
matches_df[2,"scores"][[1]][1][1]
c(0,3)
list(c(3,1))
matches_df[1,"scores"][[1]]
matches_df[1,"scores"]$value
matches_df[1,"scores"]$1
matches_df[1,"scores"]$[[1]]
matches_df[1,"scores"][[1]]$value
matches_df[1,"scores"][[1]]$value[1]
View(teams_df)
install.packages("sqldf")
sqldf::sqldf("UPDATE elo_table SET elo=200, wins=1 WHERE id=4523")
View(elo_table)
sqldf::sqldf("UPDATE elo_table SET elo=200, wins=1 WHERE id=4523")
library(sqldf)
sqldf("SELECT 8 FROM elo_table WHERE id=4523")
sqldf("SELECT * FROM elo_table WHERE id=4523")
sqldf::sqldf("UPDATE elo_table SET elo=200, wins=1 WHERE id=4523")
View(elo_table)
sqldf("UPDATE elo_table SET elo=400 WHERE id=4523)
""
)
"
sqldf("UPDATE elo_table SET elo=400 WHERE id=4523")
sqldf("UPDATE elo_table SET elo='400' WHERE id='4523'")
winner_index <- match(elo_table$id, 4532)
install.packages("data.table")
cols <- names(elo_table)
iCols <- paste0('i.', cols)
rm(cols)
rm(iCols)
winner_index <- match(elo_table$id, 4532)
winner_index <- match(elo_table$id, 4523)
winner_index <- match(elo_table$id, 4524)
winnerRow <- sqldf("SELECT * WHERE id=4523")
winnerRow <- sqldf("SELECT * FROM elo_table WHERE id=4523")
View(winnerRow)
winnerRow <- sqldf("SELECT * FROM elo_table WHERE id=$(winnerId)")
winnerRow <- sqldf("SELECT * FROM elo_table WHERE id='winnerId'")
winnerRow <- sqldf(sprintf("SELECT * FROM elo_table WHERE id=%s"), 4532)
winnerRow <- sqldf(sprintf("SELECT * FROM elo_table WHERE id=%s", 4532))
View(winnerRow)
winnerRow <- sqldf(sprintf("SELECT * FROM elo_table WHERE id=%s", 4523))
View(winnerRow)
source('C:/programming/owl-analysis/elo.R')
elo_table = init_elo_table()
source('C:/programming/owl-analysis/elo.R')
source('C:/programming/owl-analysis/elo.R')
elo_table = init_elo_table()
View(elo_table)
winnerRow <- sqldf(sprintf("SELECT * FROM elo_table WHERE id=%s", winnerId))
loserRow <- sqldf(sprintf("SELECT * FROM elo_table WHERE id=%s", loserId))
winnerRow['win'] <- winnerRow['wins'] + 1
winnerRow['map_wins'] <- winnerRow['map_wins'] + winner_score
winnerRow['map_losses'] <- winnerRow['map_losses'] + loser_score
winnerRow['map_diff'] <- winnerRow['map_diff'] + winner_map_delta
winnerRow['elo'] <- new_elos['winner']
loserRow['loss'] <- loserRow['loss'] + 1
loserRow['map_wins'] <- loserRow['map_wins'] + winner_score
loserRow['map_losses'] <- loserRow['map_losses'] + loser_score
loserRow['map_diff'] <- loserRow['map_diff'] + winner_map_delta
loserRow['elo'] <- new_elos['loser']
winnerElo <- subset(elo_table, id==winnerId)$elo
loserElo <- subset(elo_table, id==loserId)$elo
new_elos <- elo_calculation(winnerElo = winnerElo, loserElo = loserElo)
#Update each team's entry in the table
winner_index <- match(elo_table$id, winnerId)
loser_index <- match(elo_table$id, loserId)
winnerRow <- sqldf(sprintf("SELECT * FROM elo_table WHERE id=%s", winnerId))
loserRow <- sqldf(sprintf("SELECT * FROM elo_table WHERE id=%s", loserId))
winnerRow['win'] <- winnerRow['wins'] + 1
winnerRow['map_wins'] <- winnerRow['map_wins'] + winner_score
winnerRow['map_losses'] <- winnerRow['map_losses'] + loser_score
winnerRow['map_diff'] <- winnerRow['map_diff'] + winner_map_delta
winnerRow['elo'] <- new_elos['winner']
loserRow['loss'] <- loserRow['loss'] + 1
loserRow['map_wins'] <- loserRow['map_wins'] + winner_score
loserRow['map_losses'] <- loserRow['map_losses'] + loser_score
loserRow['map_diff'] <- loserRow['map_diff'] + winner_map_delta
loserRow['elo'] <- new_elos['loser']
source('C:/programming/owl-analysis/elo.R')
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
debugSource('C:/programming/owl-analysis/elo.R')
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
debugSource('C:/programming/owl-analysis/elo.R')
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(winnerRow)
View(loserRow)
debugSource('C:/programming/owl-analysis/elo.R')
matches_df[with(matches_df, order(-"actualEndDate"))]
matches_df[with(matches_df, order(-actualEndDate))]
matches_df[with(matches_df, order(matches_df$actualEndDate))]
matches_df[order(matches_df$actualEndDate)]
matches_df[order(matches_df$actualEndDate),]
View(matches_df)
matches_df <- matches_df[order(matches_df$actualEndDate),]
View(matches_df)
debugSource('C:/programming/owl-analysis/elo.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
source('C:/programming/owl-analysis/import.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
source('C:/programming/owl-analysis/import.R')
source('C:/programming/owl-analysis/import.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(loserRow)
View(winnerRow)
View(loserRow)
sqldf(sprintf("UPDATE elo_table SET elo=%s WHERE id=%s", 980, 4523)
)
view(elo_table)
View(elo_table)
s <- sprintf("UPDATE elo_table SET elo=%s WHERE id=%s", 980, 4523
)
sqldf(s)
elo_table[which(elo_table[,"id"], arr.ind=TRUE), "elo"] <- 696969
elo_table[which(elo_table$id)]
elo_table[which(elo_table$id == 4523)]
elo_table[which(elo_table$id == 4523),]
elo_table[which(elo_table$id == 4523),][elo]
elo_table[which(elo_table$id == 4523),]$elo
elo_table[which(elo_table$id == 4523),]$elo <- 9999
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
#matches_df[with(matches_df, order(matches_df$actualEndDate))]
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(matches_df)
matches_df = import_matches(chronological=TRUE)
debugSource('C:/programming/owl-analysis/import.R')
matches_df = import_matches(chronological=TRUE)
View(matches_df)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(elo_table)
View(elo_table)
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
View(elo_table)
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
#matches_df[with(matches_df, order(matches_df$actualEndDate))]
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
View(elo_table)
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
View(elo_table)
View(elo_table)
View(elo_table)
View(elo_table)
View(elo_table)
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
View(elo_table)
View(matches_df)
source('C:/programming/owl-analysis/elo.R')
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
browser()
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
browser()
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
browser()
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
match <- matches_df[1]
View(match)
match <- matches_df[1,]
View(match)
match[,"competitors"][[1]]$id
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
competitor_ids <- match[,"competitors"][[1]]$id
match <- matches_df[,1]
matches_df[,1]
matches_df[1,]
match <- matches_df[1,]
View(match)
match["competitors",1][[1]]$id
match[1,"competitors"][[1]]$id
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
match[1,"competitors"][[1]]$id
match <- matches_df[1,]
View(match)
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
browser()
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
View(elo_table)
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
View(elo_table)
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
source('C:/programming/owl-analysis/elo.R')
