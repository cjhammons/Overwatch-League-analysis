install.packages("httr")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
require("httr")
require("jsonlite")
base <- "https://api.overwatchleague.com"
endpoint <- "/v2/teams"
call <- paste(base,endpoint)
base <- "https://api.overwatchleague.com/"
endpoint <- "v2/teams"
call <- paste(base,endpoint)
base <- "https://api.overwatchleague.com/"
get_teams <- GET(base + "v2/teams")
get_teams <- GET(paste(base + "v2/teams"))
base <- "https://api.overwatchleague.com/"
call <- past(base, "v2/teams")
base <- "https://api.overwatchleague.com/"
call <- paste(base, "v2/teams")
base <- "https://api.overwatchleague.com/"
call <- paste(base, "v2/teams", sep="")
base <- "https://api.overwatchleague.com/"
call <- paste(base, "v2/teams", sep="")
get_teams <- GET(call)
View(get_teams)
teams_text <- content(get_teams, "text")
teams_json <- fromJSON(teams_text, flatten=TRUE)
View(teams_json)
View(data_json)
data_json <- fromJSON(teams_text, flatten=TRUE)
view(data_json)
View(data_json)
data_json <- fromJSON(teams_text)
View(data_json)
View(teams_json)
teams_text <- fromJSON(get_teams, "text")
teams_text <- fromJSON(content(get_teams, "text"))
View(teams_text)
teams_json <- fromJSON(content(get_teams, "text"))
teams_df <- as.data.frame(teams_json)
View(teams_df)
base <- "https://api.overwatchleague.com/"
get_teams <- GET(paste(base, "v2/teams", sep=""))
teams_json <- fromJSON(content(get_teams, "text"))
teams_df <- as.data.frame(teams_json)
teams_df <- as.data.frame(fromJSON(content(get_teams, "text")))
View(teams_df)
get_teams <- GET(paste(base, "ranking", sep=""))
rankings_df <- as.data.frame(fromJSON(content(get_teams, "text")))
View(rankings_df)
get_teams <- GET(paste(base, "standings", sep=""))
rankings_df <- as.data.frame(fromJSON(content(get_teams, "text")))
standings_df <- as.data.frame(fromJSON(content(get_teams, "text")))
require("httr")
standings_df <- as.data.frame(fromJSON(content(
GET(paste(base, "standings", sep="")), "text")
))
teams_df <- as.data.frame(fromJSON(content(
GET(paste(base, "v2/teams", sep="")), "text")
))
source('C:/programming/owl-analysis/api-scripts/import-teams.R', echo=TRUE)
View(teams_df)
View(rankings_df)
teams_df <- as.data.frame(fromJSON(content(
GET(paste(base, "v2/teams", sep="")), "text")
))
rankings_df <- as.data.frame(fromJSON(content(
GET(paste(base, "ranking", sep="")), "text")
))
standings_df <- as.data.frame(fromJSON(content(
GET(paste(base, "standings", sep="")), "text")
))
source('C:/programming/owl-analysis/api-scripts/import-teams.R', echo=TRUE)
players_df <- as.data.frame(fromJSON(content(
GET(paste(base, "players", sep="")), "text")
))
players_df <- as.data.frame(fromJSON(content(
GET(paste(base, "players", sep="")), "text")
))
get_teams <- GET(paste(base, "v2/teams", sep=""))
teams_json <- fromJSON(content(get_teams, "text"))
teams_df <- as.data.frame(teams_json)
get_teams <- GET(paste(base, "v2/teams", sep=""))
teams_json <- fromJSON(content(get_teams, "text"))
teams_df <- as.data.frame(teams_json)
get_ranking <- GET(paste(base, "ranking", sep=""))
ranking_json <- fromJSON(content(get_standings, "text"))
ranking_df <- as.data.frame(standings_json)
get_standings <- GET(paste(base, "standings", sep=""))
standings_json <- fromJSON(content(get_standings, "text"))
standings_df <- as.data.frame(standings_json)
get_ranking <- GET(paste(base, "ranking", sep=""))
ranking_json <- fromJSON(content(get_standings, "text"))
ranking_df <- as.data.frame(ranking_json)
View(teams_df)
View(ranking_json)
get_players <- GET(paste(base, "players", sep=""))
players_json <- fromJSON(content(get_players, "text"))
playerss_df <- as.data.frame(players_json)
View(players_json)
get_players <- GET(paste(base, "players", sep=""))
players_content_json <-fromJSON(content(get_players, "text"))
players_json <- fromJSON(content(players_content_json, "text"))
playerss_df <- as.data.frame(players_json)
View(players_content_json)
View(players_json)
players_json <- fromJSON(content(get_players, "text"),flatten=TRUE)
playerss_df <- as.data.frame(players_json)
View(rankings_df)
View(players_json)
players_json <- fromJSON(content(get_players.content, "text"),flatten=TRUE)
get_teams <- GET(paste(base, "v2/teams", sep=""))
teams_json <- fromJSON(content(get_teams, "text"),flatten=TRUE)
teams_df <- as.data.frame(teams_json)
View(get_players)
View(teams_df)
get_players <- GET(paste(base, "players", sep=""))
players_content <- content(get_players, "text")
players_json <- fromJSON(players_content,flatten=TRUE)
playerss_df <- as.data.frame(players_json)
players_content <- content(get_players, "text")
players_json <- fromJSON(players_content,flatten=TRUE)
View(players_json)
players_df <- as.data.frame(players_json)
View(players_json)
View(teams_json)
get_teams <- GET(paste(base, "v2/teams", sep=""))
teams_json <- fromJSON(content(get_teams, "text"),flatten=TRUE)
teams_df <- as.data.frame(teams_json)
View(teams_json)
View(players_json)
players_content <- content(get_players, "text")
View(players_content_json)
source('C:/programming/owl-analysis/api-scripts/import-teams.R', echo=TRUE)
get_ranking <- GET(paste(base, "ranking", sep=""))
ranking_json <- fromJSON(content(get_ranking, "text"),flatten=TRUE)
ranking_df <- as.data.frame(ranking_json)
get_standings <- GET(paste(base, "standings", sep=""))
standings_json <- fromJSON(content(get_standings, "text"),flatten=TRUE)
standings_df <- as.data.frame(standings_json)
get_players <- GET(paste(base, "players", sep=""))
players_content <- content(get_players, "text")
players_json <- fromJSON(players_content,flatten=TRUE)
players_df <- as.data.frame(players_json)
View(standings_json)
View(players_json)
players_content <- content(get_players, "text")
players_json <- fromJSON(players_content.get("content"),flatten=TRUE)
players_df <- as.data.frame(players_json)
players_content <- content(get_players, "text").get("content")
players_content <- content(get_players, "text")$content
players_text <- content(get_players, "text")
players_content <- players_text$content
players_text <- content(get_players, "text")
players_json <- fromJSON(players_content,flatten=TRUE)$content
View(players_json)
get_players <- GET(paste(base, "players", sep=""))
players_text <- content(get_players, "text")
players_json <- fromJSON(players_content,flatten=TRUE)$content
players_df <- as.data.frame(players_json)
View(players_df)
players_df <- as.data.frame(fromJSON(content(get_players, "text"),flatten=TRUE)$content)
View(players_df)
get_players <- GET(paste(base, "players", sep=""))
players_df <- as.data.frame(fromJSON(content(get_players, "text"),flatten=TRUE)$content)
View(players_df)
source('C:/programming/owl-analysis/api-scripts/import-teams.R', echo=TRUE)
View(players_df)
View(ranking_df)
View(teams_df)
get_matches <- GET(paste(base, "matches", sep=""))
matches_df <- as.data.frame(fromJSON(content(get_matches, "text"),flatten=TRUE))
matches_df <- as.data.frame(fromJSON(content(get_matches, "text"),flatten=TRUE)$content)
View(matches_df)
View(players_df)
View(ranking_df)
View(matches_df)
View(players_df)
install.packages("ggplot")
install.packages("tidyverse")
library(tidyverse)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
nationalities <- ggplot(data=players_df) +
geom_bar(mapping = aes(x=nationality))
View(nationalities)
View(nationalities)
View(nationalities)
nationalities <- ggplot(data=players_df) +
geom_bar(mapping = aes(x=nationality))
nationalities
View(matches_df)
source('C:/programming/owl-analysis/import.R', echo=TRUE)
source('C:/programming/owl-analysis/import.R', echo=TRUE)
View(teams_df)
View(teams_df)
matches_df <- as.data.frame(fromJSON(content(GET(paste(base, "matches", sep="")), "text"),flatten=TRUE))
matches_df <- as.data.frame(fromJSON(content(GET(paste(base, "matches", sep="")), "text"),flatten=TRUE)$content)
View(matches_df)
games_df <- NULL
for (row in 1:nrow(matches_df)) {
if (games_df.isNull()){
}
}
for (row in 1:nrow(matches_df)) {
if (games_df.is.null){
}
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
games_df <- rbind(games_df, row)
}
View(games_df)
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
games_df <- rbind(games_df, row["games"])
}
View(games_df)
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
game_df <- row["games"]
games_df <- rbind(games_df, game_df])
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
game_df <- row["games"]
games_df <- rbind(games_df, game_df)
}
View(games_df)
View(matches_df)
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
game_df <- row[c(1,16)]
games_df <- rbind(games_df, game_df)
}
View(games_df)
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
game_df <- row[,16]
games_df <- rbind(games_df, game_df)
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
game_df <- row[1,16]
games_df <- rbind(games_df, game_df)
}
for (row in 1:nrow(matches_df)) {
game_df <- matches_df[1,16]
games_df <- rbind(games_df, game_df)
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
game_df <- matches_df[row, "games"]
games_df <- rbind(games_df, game_df)
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
game_df <- matches_df[row, "games"]
}
View(game_df)
matches_df <- as.data.frame(fromJSON(content(GET(paste(base, "matches", sep="")), "text"),flatten=TRUE)$content)
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
games <- matches_df[row, "games"]
}
View(games)
matches_df[1,]
matches_df[1,"games"]
for (row in 1:nrow(matches_df)) {
games <- matches_df[row, "games"]
games_df <- rbind(games_df, games)
}
View(matches_df)
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
if (matches_df[row,"status"] == "CONDLUDED") {
games <- matches_df[row, "games"]
games_df <- rbind(games_df, games)
}
}
View(games)
View(games_df)
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
if (matches_df[row,"status"] == "CONCLUDED") {
games <- matches_df[row, "games"]
games_df <- rbind(games_df, games)
}
}
matches_df[1,"status"]
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
games <- matches_df[row, "games"]
games_df <- rbind(games_df, games)
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
games <- matches_df[row, "games"]
#games_df <- rbind(games_df, games)
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
games <- matches_df[row, "games"]
}
#games_df <- rbind(games_df, games)
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
games <- matches_df[row, "games"]
}
#games_df <- rbind(games_df, games)
}
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
games <- matches_df[row, "games"]
}
}
View(games)
View(games)
View(games[[1]])
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
games <- matches_df[row, "games"]
games_df <- rbind(games_df, games[[1]])
}
}
View(games)
View(games_df)
View(games_df)
View(teams_df)
View(teams_df)
View(teams_df)
View(games_df)
teams_df[1,"data.id"]
init_elo_table <- function(){
elo_rankings_df <- data.frame()
for (row in 1:nrow(teams_df)) {
newRow <- data.frame(id=teams_df[row,"data.id"],
handle=teams_df[row,"data.handle"],
name=teams_df[row,"data.name"],
abbreviatedName=teams_df[row,"data.abbreviatedName"],
Elo=1000)
elo_rankings_df <- rbind(elo_rankings_df, newRow)
}
}
init_elo_table()
View(init_elo_table)
elo_table = init_elo_table()
source('C:/programming/owl-analysis/elo_calculations.R')
elo_table = init_elo_table()
View(newRow)
View(elo_rankings_df)
View(elo_rankings_df)
elo_table <- init_elo_table()
View(elo_table)
debugSource('C:/programming/owl-analysis/elo_calculations.R')
elo_calculation(4532, 4524)
elo_calculation(4532, 4524)
elo_calculation(4523,4524)
debugSource('C:/programming/owl-analysis/elo_calculations.R')
elo_calculation(4523,4524)
View(team1)
View(team2)
View(team1)
View(team2)
View(elo_table)
asdf <- subset(elo_table, id==4523)
View(asdf)
debugSource('C:/programming/owl-analysis/elo_calculations.R')
View(asdf)
elo_calculation(4523,4524)
debugSource('C:/programming/owl-analysis/elo_calculations.R')
elo_calculation(4523,4524)
View(team1)
View(team2)
View(elo_table)
debugSource('C:/programming/owl-analysis/elo_calculations.R')
elo_calculation(2400,2000)
elo <- elo_calculation(2400,2000)
View(elo)
debugSource('C:/programming/owl-analysis/elo_calculations.R')
View(elo)
elo <- elo_calculation(2400,2000)
debugSource('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400,2000)
source('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400,2000)
View(elo)
source('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400,2000)
elo <- elo_calculation(2400,2000)
nvec=c("winner"=2)
nvec=c("winner"=2,"loser"=3)
nvec<-c("winner"=2,"loser"=3)
nvec<-c("winner"=2,"loser"=3,"asdf"=45)
debugSource('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400,2000)
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
games <- matches_df[row, "games"]
games_df <- rbind(games_df, games[[1]])
}
}
require("httr")
require("jsonlite")
base <- "https://api.overwatchleague.com/"
teams_df <- as.data.frame(fromJSON(content(GET(paste(base, "v2/teams", sep="")), "text"),flatten=TRUE))
ranking_df <- as.data.frame(fromJSON(content(GET(paste(base, "ranking", sep="")), "text"),flatten=TRUE))
players_df <- as.data.frame(fromJSON(content(GET(paste(base, "players", sep="")), "text"),flatten=TRUE)$content)
matches_df <- as.data.frame(fromJSON(content(GET(paste(base, "matches", sep="")), "text"),flatten=TRUE)$content)
#Extract the games from the match objects and put them in their own dataframe
games_df <- data.frame()
for (row in 1:nrow(matches_df)) {
status <- matches_df[row,"status"]
if (identical(status, "CONCLUDED")) {
games <- matches_df[row, "games"]
games_df <- rbind(games_df, games[[1]])
}
}
init_elo_table()
debugSource('C:/programming/owl-analysis/elo_calculations.R')
init_elo_table()
elo <- elo_calculation(2400, 2000)
init_elo_table()
elo_df <- init_elo_table()
source('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400, 2000)
source('C:/programming/owl-analysis/elo_calculations.R')
source('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400, 2000)
source('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400, 2000)
source('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400, 2000)
elo <- elo_calculation(2400, 2000)
source('C:/programming/owl-analysis/elo_calculations.R')
elo <- elo_calculation(2400, 2000)
