for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(winnerRow)
View(loserRow)
debugSource('C:/programming/owl-analysis/elo.R')
matches_df[with(matches_df, order(-"actualEndDate"))]
matches_df[with(matches_df, order(-actualEndDate))]
matches_df[with(matches_df, order(matches_df$actualEndDate))]
matches_df[order(matches_df$actualEndDate)]
matches_df[order(matches_df$actualEndDate),]
View(matches_df)
matches_df <- matches_df[order(matches_df$actualEndDate),]
View(matches_df)
debugSource('C:/programming/owl-analysis/elo.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
source('C:/programming/owl-analysis/import.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
source('C:/programming/owl-analysis/import.R')
source('C:/programming/owl-analysis/import.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(loserRow)
View(winnerRow)
View(loserRow)
sqldf(sprintf("UPDATE elo_table SET elo=%s WHERE id=%s", 980, 4523)
)
view(elo_table)
View(elo_table)
s <- sprintf("UPDATE elo_table SET elo=%s WHERE id=%s", 980, 4523
)
sqldf(s)
elo_table[which(elo_table[,"id"], arr.ind=TRUE), "elo"] <- 696969
elo_table[which(elo_table$id)]
elo_table[which(elo_table$id == 4523)]
elo_table[which(elo_table$id == 4523),]
elo_table[which(elo_table$id == 4523),][elo]
elo_table[which(elo_table$id == 4523),]$elo
elo_table[which(elo_table$id == 4523),]$elo <- 9999
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
#matches_df[with(matches_df, order(matches_df$actualEndDate))]
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(matches_df)
matches_df = import_matches(chronological=TRUE)
debugSource('C:/programming/owl-analysis/import.R')
matches_df = import_matches(chronological=TRUE)
View(matches_df)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
process_match(match, elo_table = elo_table)
}
}
View(elo_table)
View(elo_table)
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
View(elo_table)
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games()
#matches_df[with(matches_df, order(matches_df$actualEndDate))]
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
View(elo_table)
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
View(elo_table)
View(elo_table)
View(elo_table)
View(elo_table)
View(elo_table)
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
View(elo_table)
View(matches_df)
source('C:/programming/owl-analysis/elo.R')
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
browser()
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
browser()
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
browser()
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
match <- matches_df[1]
View(match)
match <- matches_df[1,]
View(match)
match[,"competitors"][[1]]$id
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
competitor_ids <- match[,"competitors"][[1]]$id
match <- matches_df[,1]
matches_df[,1]
matches_df[1,]
match <- matches_df[1,]
View(match)
match["competitors",1][[1]]$id
match[1,"competitors"][[1]]$id
source('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
match[1,"competitors"][[1]]$id
match <- matches_df[1,]
View(match)
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
browser()
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(match, elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
View(elo_table)
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
View(elo_table)
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
View(elo_table)
debugSource('C:/programming/owl-analysis/elo.R')
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
elo_table <- init_elo_table()
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
source('C:/programming/owl-analysis/elo.R')
View(elo_table)
View(elo_table)
source('C:/programming/owl-analysis/elo.R')
source('C:/programming/owl-analysis/elo.R')
source('C:/programming/owl-analysis/elo.R')
source('C:/programming/owl-analysis/elo/elo_util.R')
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
library("jsonlite")
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
library("jsonlite")
import_matches()
source('C:/programming/owl-analysis/import.R')
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
source('C:/programming/owl-analysis/elo/elo_util.R')
import_matches()
source('C:/programming/owl-analysis/elo/elo_util.R')
source('C:/programming/owl-analysis/import.R')
elo_table <- init_elo_table(teams_df)
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
View(elo_table)
source('C:/programming/owl-analysis/elo/elo_util.R')
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
elo_table <- init_elo_table(teams_df, 2500)
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
elo_table <- init_elo_table(teams_df, 2500)
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table)
}
}
View(elo_table)
elo_table <- init_elo_table(teams_df, 2500)
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table, k=50)
}
}
View(elo_table)
source('C:/programming/owl-analysis/elo/elo_util.R')
elo_table <- init_elo_table(teams_df, 2500)
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table, k=50)
}
}
View(elo_table)
View(matches_df)
source('C:/programming/owl-analysis/elo/elo_util.R')
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
source('C:/programming/owl-analysis/elo/elo_util.R')
install.packages("rmarkdown")
getOptions("repos")
getOption("repos")
options(repos = c(CRAN = "https://cran.rstudio.com"))
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
install.packages("yaml")
install.packages("yaml")
library(devtools)
install_github('viking/r-yaml')
install.packages("install_github")
library("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
teams_df = import_teams()
source('C:/programming/owl-analysis/import.R')
source('C:/programming/owl-analysis/import.R')
install.packages("httr", "jsonlite")
install.packages("httr")
install.packages("jsonlite")
source('C:/programming/owl-analysis/elo/elo_algorithms.R')
source('C:/programming/owl-analysis/elo/elo_util.R')
source('C:/programming/owl-analysis/import.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games(matches_df = matches_df)
elo_table <- init_elo_table(teams_df, 2500)
source('C:/programming/owl-analysis/elo/elo_util.R')
install.packages(sqldf)
install.packages("sqldf")
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games(matches_df = matches_df)
elo_table <- init_elo_table(teams_df, 2500)
source('C:/programming/owl-analysis/elo/elo_util.R')
teams_df = import_teams()
players_df = import_players()
matches_df = import_matches(chronological=TRUE)
games_df = import_games(matches_df = matches_df)
elo_table <- init_elo_table(teams_df, 2500)
for (match in 1:nrow(matches_df)) {
status <- matches_df[match,"status"]
if (identical(status, "CONCLUDED")) {
elo_table <- process_match(matches_df[match,], elo_table = elo_table, k=50)
}
}
View(elo_table)
source('C:/programming/owl-analysis/import.R')
source('C:/programming/owl-analysis/elo/elo_util.R')
View(elo_table)
dFuel_history <- vector(1000)
asdf <- vector(1000)
asdf <- c(1000)
asdf <- c(asdf, 2000, 3000)
asdf <- vector(mode="list")
asdf[343] <- c(1000)
View(asdf)
asdf[[456]] <- c(1000)
View(asdf)
asdf <- vector(mode="list")
asdf[[456]] <- c(1000)
elo_table <- init_elo_table(teams_df, 2500)
history <- data.frame()
for (row in nrow(elo_table)) {
newRow <- data.frame(elo_table[row,"id"]=2500)
history <- rbind(history, newRow)
}
elo_table <- init_elo_table(teams_df, 2500)
history <- data.frame()
for (row in nrow(elo_table)) {
newRow <- data.frame(elo_table[row,"id"]=2500)
history <- rbind(history, newRow)
}
elo_table <- init_elo_table(teams_df, 2500)
history <- data.frame()
for (row in nrow(elo_table)) {
newRow <- data.frame(placeholder_name=2500)
names(newRow)[names(newRow) == "placeholder_name"] <- elo_table[row,'id']
history <- rbind(history, newRow)
}
View(history)
elo_table <- init_elo_table(teams_df, 2500)
history <- data.frame()
for (row in nrow(elo_table)) {
newRow <- data.frame(placeholder_name=2500)
names(newRow)[names(newRow) == "placeholder_name"] <- elo_table[row,'id']
history <- rbind(history, newRow)
}
elo_table <- init_elo_table(teams_df, 2500)
history <- data.frame()
for (row in nrow(elo_table)) {
newRow <- data.frame(placeholder_name=2500)
names(newRow)[names(newRow) == "placeholder_name"] <- elo_table[row,'id']
history <- rbind(history, newRow)
}
browser()
elo_table <- init_elo_table(teams_df, 2500)
history <- data.frame()
for (row in nrow(elo_table)) {
newRow <- data.frame(placeholder_name=2500)
names(newRow)[names(newRow) == "placeholder_name"] <- elo_table[row,'id']
history <- rbind(history, newRow)
}
browser()
elo_table <- init_elo_table(teams_df, 2500)
history <- data.frame()
for (row in nrow(elo_table)) {
newRow <- data.frame(placeholder_name=2500)
names(newRow)[names(newRow) == "placeholder_name"] <- elo_table[row,'id']
history <- rbind(history, newRow)
}
source('C:/programming/owl-analysis/elo/elo_util.R')
debugSource('C:/programming/owl-analysis/elo/elo_algorithms.R')
